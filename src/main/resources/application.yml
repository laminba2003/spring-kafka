spring:
    kafka:
        consumer:
            group-id: group-id
            key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
            properties:
                interceptor.classes: com.spring.training.interceptor.MessageConsumerInterceptor
                spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
                spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            properties:
                interceptor.classes: com.spring.training.interceptor.MessageProducerInterceptor
        properties:
            schema.registry.url: http://localhost:8081
        bootstrap-servers: localhost:9092
        streams:
            properties:
                bootstrap.servers: localhost:9092
                application.id: spring-app
                default.key.serde:  org.apache.kafka.common.serialization.Serdes$StringSerde
                default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
                schema.registry.url: http://localhost:8081
                num.stream.threads: 1
                replication.factor: 1
                auto.offset.reset: earliest
                default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler